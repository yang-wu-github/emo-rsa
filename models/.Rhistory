Ma3.infGoal <- d.Ma3.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Ma3.socGoal <- d.Ma3.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.Ma4 <- webppl(
program_file = here("models/Ma4_UttInfEmoInf.wppl"),
data = df,
data_var = "df"
)
d.Ma4.l1 <- bind_rows(d.Ma4$l1) %>%
mutate(model = "Ma4: UttInfEmoInf")
# l1: state
Ma4.state <- d.Ma4.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Ma4.infGoal <- d.Ma4.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Ma4.socGoal <- d.Ma4.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.Ma5 <- webppl(
program_file = here("models/Ma5_UttInfEmoTruSoc.wppl"),
data = df,
data_var = "df"
)
d.Ma5.l1 <- bind_rows(d.Ma5$l1) %>%
mutate(model = "Ma5: UttInfEmoTruSoc")
# l1: state
Ma5.state <- d.Ma5.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Ma5.infGoal <- d.Ma5.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Ma5.socGoal <- d.Ma5.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
# l1: emoComm
Ma5.emoComm <- d.Ma5.l1 %>%
group_by(utterance, emotion, emoComm, model) %>%
summarize(expval = sum(prob))
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.Ma6 <- webppl(
program_file = here("models/Ma6_UttInfEmoTruBal.wppl"),
data = df,
data_var = "df"
)
d.Ma6.l1 <- bind_rows(d.Ma6$l1) %>%
mutate(model = "Ma6: UttInfEmoTruBal")
# l1: state
Ma6.state <- d.Ma6.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Ma6.infGoal <- d.Ma6.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Ma6.socGoal <- d.Ma6.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
# l1: emoComm
Ma6.emoComm <- d.Ma6.l1 %>%
group_by(utterance, emotion, emoComm, model) %>%
summarize(expval = sum(prob))
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.Mb0 <- webppl(
program_file = here("models/Mb0_UttBalEmoNon.wppl"),
data = df,
data_var = "df"
)
d.Mb0.l1 <- bind_rows(d.Mb0$l1) %>%
mutate(model = "Mb0: UttBalEmoNon")
# l1: state
Mb0.state <- d.Mb0.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb0.infGoal <- d.Mb0.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb0.socGoal <- d.Mb0.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.Mb1 <- webppl(
program_file = here("models/Mb1_UttBalEmoSoc.wppl"),
data = df,
data_var = "df"
)
d.Mb1.l1 <- bind_rows(d.Mb1$l1) %>%
mutate(model = "Mb1: UttBalEmoSoc")
# l1: state
Mb1.state <- d.Mb1.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb1.infGoal <- d.Mb1.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb1.socGoal <- d.Mb1.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.Mb2 <- webppl(
program_file = here("models/Mb2_UttBalEmoBal.wppl"),
data = df,
data_var = "df"
)
d.Mb2.l1 <- bind_rows(d.Mb2$l1) %>%
mutate(model = "Mb2: UttBalEmoBal")
# l1: state
Mb2.state <- d.Mb2.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb2.infGoal <- d.Mb2.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb2.socGoal <- d.Mb2.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
d.Mb3 <- webppl(
program_file = here("models/Mb3_UttBalEmoTru.wppl"),
data = df,
data_var = "df"
)
d.Mb3.l1 <- bind_rows(d.Mb3$l1) %>%
mutate(model = "Mb3: UttBalEmoTru")
# l1: state
Mb3.state <- d.Mb3.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb3.infGoal <- d.Mb3.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb3.socGoal <- d.Mb3.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
d.Mb4 <- webppl(
program_file = here("models/Mb4_UttBalEmoInf.wppl"),
data = df,
data_var = "df"
)
d.Mb4.l1 <- bind_rows(d.Mb4$l1) %>%
mutate(model = "Mb4: UttBalEmoInf")
# l1: state
Mb4.state <- d.Mb4.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb4.infGoal <- d.Mb4.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb4.socGoal <- d.Mb4.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
d.Mb42 <- webppl(
program_file = here("models/TESTMb4_UttBalEmoInf.wppl"),
data = df,
data_var = "df"
)
d.Mb42 <- webppl(
program_file = here("models/TESTMb4_UttBalEmoTruInf.wppl"),
data = df,
data_var = "df"
)
d.Mb42.l1 <- bind_rows(d.Mb42$l1) %>%
mutate(model = "Mb4: UttBalEmoInf")
# l1: state
Mb42.state <- d.Mb42.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb42.infGoal <- d.Mb42.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb42.socGoal <- d.Mb42.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.Mb5 <- webppl(
program_file = here("models/Mb5_UttBalEmoTruSoc.wppl"),
data = df,
data_var = "df"
)
d.Mb5.l1 <- bind_rows(d.Mb5$l1) %>%
mutate(model = "Mb5: UttBalEmoTruSoc")
# l1: state
Mb5.state <- d.Mb5.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: emoComm
Mb5.emoComm <- d.Mb5.l1 %>%
group_by(utterance, emotion, emoComm, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb5.infGoal <- d.Mb5.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb5.socGoal <- d.Mb5.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
d.Mb6 <- webppl(
program_file = here("models/Mb6_UttBalEmoTruBal.wppl"),
data = df,
data_var = "df"
)
d.Mb6.l1 <- bind_rows(d.Mb6$l1) %>%
mutate(model = "Mb6: UttBalEmoTruBal")
# l1: state
Mb6.state <- d.Mb6.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: emoComm
Mb6.emoComm <- d.Mb6.l1 %>%
group_by(utterance, emotion, emoComm, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb6.infGoal <- d.Mb6.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb6.socGoal <- d.Mb6.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
d.raw <- read.csv(here("models/EMORSA2.csv"))
d <- d.raw %>%
slice(-1:-8) %>%
select(ResponseId, Status, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`, status = `Status`) %>%
mutate(question = case_when(question == "feed" ~ "accurate feedback",
question == "nice" ~ "niceness",
question == "taste" ~ "ground truth",
question == "face" ~ "real expression",
question == "state" ~ "real utterance",
question == "check" ~ "check"),
question = fct_relevel(question, "ground truth", "accurate feedback", "niceness", "real expression", "real utterance"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4", "5", "6")) %>%
filter(response != "")
checks <- d %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checks, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got 75% or more check questions correct
d <- full_join(d, checks) %>%
filter(perc_correct > .50) %>%
filter
d2 <- d %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")))
# state: models
state0 <- rbind(Ma0.state, Ma1.state, Ma2.state, Ma3.state, Ma4.state, Ma5.state, Ma6.state,
Mb0.state, Mb1.state, Mb2.state, Mb3.state, Mb4.state, Mb42.state, Mb5.state, Mb6.state)
state <- state0 %>%
mutate(condition = paste(utterance, emotion),
condition = factor(condition, levels = c("good smile", "bad frown", "good frown", "bad smile")))
pd <- position_dodge(0.2)
state.plot <- ggplot(state, aes(x = state, y = expval,
group = condition,
color=condition)) +
geom_line(position=pd) +
geom_point(position=pd) +
scale_color_brewer(palette="Dark2") +
theme_bw() +
ylim(0, 1) +
xlab("true state")+
ylab("posterior probability mass") +
theme(legend.position='none')+
ggtitle("\"How do you think the food tasted?\"") +
theme(legend.position='none',
plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(model))
state.plot
# state: human
d.state <- d2[d$question=="ground truth",] %>%
group_by(condition, response) %>%
multi_boot_standard(col = "correct")
# models
infGoal0 <- rbind(Ma0.infGoal, Ma1.infGoal, Ma2.infGoal, Ma3.infGoal, Ma4.infGoal, Ma5.infGoal, Ma6.infGoal,
Mb0.infGoal, Mb1.infGoal, Mb2.infGoal, Mb3.infGoal, Mb4.infGoal,Mb42.infGoal, Mb5.infGoal, Mb6.infGoal)
infGoal <- infGoal0 %>%
mutate(condition = paste(utterance, emotion),
condition = factor(condition, levels = c("good smile", "bad frown", "good frown", "bad smile")))
pd <- position_dodge(0.2)
infGoal.plot <- ggplot(infGoal, aes(x = infGoal, y = expval,
group = condition,
color=condition)) +
geom_line(position=pd) +
geom_point(position=pd) +
scale_color_brewer(palette="Dark2") +
theme_bw() +
theme(legend.position='none')+
ylim(0, 0.3) +
xlab("informational goal") +
ylab("posterior probability mass") +
ggtitle("\"How likely do you think the speaker's goal was to provide accurate feedback?\"") +
theme(legend.position='none',
plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(model))
infGoal.plot
# models
socGoal0 <- rbind(Ma0.socGoal, Ma1.socGoal, Ma2.socGoal, Ma3.socGoal, Ma4.socGoal, Ma5.socGoal, Ma6.socGoal,
Mb0.socGoal, Mb1.socGoal, Mb2.socGoal, Mb3.socGoal, Mb4.socGoal,Mb42.socGoal, Mb5.socGoal, Mb6.socGoal)
socGoal <- socGoal0 %>%
mutate(condition = paste(utterance, emotion),
condition = factor(condition, levels = c("good smile", "bad frown", "good frown", "bad smile")))
pd <- position_dodge(0.2)
socGoal.plot <- ggplot(socGoal, aes(x = socGoal, y = expval,
group = condition,
color=condition)) +
geom_line(position=pd) +
geom_point(position=pd) +
scale_color_brewer(palette="Dark2") +
theme_bw() +
theme(legend.position='none')+
ylim(0, 0.3) +
xlab("social goal") +
ylab("posterior probability mass") +
ggtitle("\"How likely do you think the speaker's goal was to be nice?\"") +
theme(legend.position='none',
plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(model))
socGoal.plot
total <- state.total / infGoal.total / socGoal.total
# without human data
total <- state.plot + infGoal.plot + socGoal.plot & theme(legend.position = "right")
total + plot_layout(ncol=1, guides = "collect")
ggsave(here("models/TESTplots_14models_graded_predictions.pdf"), width=22, height=8)
d.Mb42 <- webppl(
program_file = here("models/TESTMb4_UttBalEmoTruInf.wppl"),
data = df,
data_var = "df"
)
d.Mb42.l1 <- bind_rows(d.Mb42$l1) %>%
mutate(model = "Mb42: UttBalEmoInf")
# l1: state
Mb42.state <- d.Mb42.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
d.Mb42.l1 <- bind_rows(d.Mb42$l1) %>%
mutate(model = "Mb42: UttBalEmoTruInf")
# l1: state
Mb42.state <- d.Mb42.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb42.infGoal <- d.Mb42.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb42.socGoal <- d.Mb42.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
d.Mb4 <- webppl(
program_file = here("models/Mb4_UttBalEmoInf.wppl"),
data = df,
data_var = "df"
)
d.Mb4.l1 <- bind_rows(d.Mb4$l1) %>%
mutate(model = "Mb4: UttBalEmoInf")
# l1: state
Mb4.state <- d.Mb4.l1 %>%
group_by(utterance, emotion, state, model) %>%
summarize(expval = sum(prob))
# l1: infGoal
Mb4.infGoal <- d.Mb4.l1 %>%
group_by(utterance, emotion, infGoal, model) %>%
summarize(expval = sum(prob))
# l1: socGoal
Mb4.socGoal <- d.Mb4.l1 %>%
group_by(utterance, emotion, socGoal, model) %>%
summarize(expval = sum(prob))
# state: models
state0 <- rbind(Ma0.state, Ma1.state, Ma2.state, Ma3.state, Ma4.state, Ma5.state, Ma6.state,
Mb0.state, Mb1.state, Mb2.state, Mb3.state, Mb4.state, Mb42.state, Mb5.state, Mb6.state)
state <- state0 %>%
mutate(condition = paste(utterance, emotion),
condition = factor(condition, levels = c("good smile", "bad frown", "good frown", "bad smile")))
pd <- position_dodge(0.2)
state.plot <- ggplot(state, aes(x = state, y = expval,
group = condition,
color=condition)) +
geom_line(position=pd) +
geom_point(position=pd) +
scale_color_brewer(palette="Dark2") +
theme_bw() +
ylim(0, 1) +
xlab("true state")+
ylab("posterior probability mass") +
theme(legend.position='none')+
ggtitle("\"How do you think the food tasted?\"") +
theme(legend.position='none',
plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(model))
state.plot
# models
infGoal0 <- rbind(Ma0.infGoal, Ma1.infGoal, Ma2.infGoal, Ma3.infGoal, Ma4.infGoal, Ma5.infGoal, Ma6.infGoal,
Mb0.infGoal, Mb1.infGoal, Mb2.infGoal, Mb3.infGoal, Mb4.infGoal,Mb42.infGoal, Mb5.infGoal, Mb6.infGoal)
infGoal <- infGoal0 %>%
mutate(condition = paste(utterance, emotion),
condition = factor(condition, levels = c("good smile", "bad frown", "good frown", "bad smile")))
pd <- position_dodge(0.2)
infGoal.plot <- ggplot(infGoal, aes(x = infGoal, y = expval,
group = condition,
color=condition)) +
geom_line(position=pd) +
geom_point(position=pd) +
scale_color_brewer(palette="Dark2") +
theme_bw() +
theme(legend.position='none')+
ylim(0, 0.3) +
xlab("informational goal") +
ylab("posterior probability mass") +
ggtitle("\"How likely do you think the speaker's goal was to provide accurate feedback?\"") +
theme(legend.position='none',
plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(model))
infGoal.plot
# models
socGoal0 <- rbind(Ma0.socGoal, Ma1.socGoal, Ma2.socGoal, Ma3.socGoal, Ma4.socGoal, Ma5.socGoal, Ma6.socGoal,
Mb0.socGoal, Mb1.socGoal, Mb2.socGoal, Mb3.socGoal, Mb4.socGoal,Mb42.socGoal, Mb5.socGoal, Mb6.socGoal)
socGoal <- socGoal0 %>%
mutate(condition = paste(utterance, emotion),
condition = factor(condition, levels = c("good smile", "bad frown", "good frown", "bad smile")))
pd <- position_dodge(0.2)
socGoal.plot <- ggplot(socGoal, aes(x = socGoal, y = expval,
group = condition,
color=condition)) +
geom_line(position=pd) +
geom_point(position=pd) +
scale_color_brewer(palette="Dark2") +
theme_bw() +
theme(legend.position='none')+
ylim(0, 0.3) +
xlab("social goal") +
ylab("posterior probability mass") +
ggtitle("\"How likely do you think the speaker's goal was to be nice?\"") +
theme(legend.position='none',
plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(model))
socGoal.plot
# without human data
total <- state.plot + infGoal.plot + socGoal.plot & theme(legend.position = "right")
total + plot_layout(ncol=1, guides = "collect")
ggsave(here("models/TESTplots_14models_graded_predictions.pdf"), width=22, height=8)
