d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3.l1 <- bind_rows(d.M3$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
library(rwebppl)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
library(patchwork)
library(ggpubr)
library(lme4)
library(brms)
rm(list = ls())
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.M0 <- webppl(
program_file = here("models/M0_No_Emo.wppl"),
data = df,
data_var = "df"
)
d.M0.l1 <- bind_rows(d.M0$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M0.state <- d.M0.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M0: No Emo") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M0.infGoal <- d.M0.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M0: No Emo") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M0.socGoal <- d.M0.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M0: No Emo") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.M1 <- webppl(
program_file = here("models/M1_Both_Com.wppl"),
data = df,
data_var = "df"
)
d.M1.l1 <- bind_rows(d.M1$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M1.state <- d.M1.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M1.infGoal <- d.M1.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M1.socGoal <- d.M1.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
d.M2 <- webppl(
program_file = here("models/M2_Speech_Com.wppl"),
data = df,
data_var = "df"
)
d.M2.l1 <- bind_rows(d.M2$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M2.state <- d.M2.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M2.infGoal <- d.M2.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M2.socGoal <- d.M2.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.raw <- read.csv(here("models/EMORSA2.csv"))
d <- d.raw %>%
slice(-1:-8) %>%
select(ResponseId, Status, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`, status = `Status`) %>%
mutate(question = case_when(question == "feed" ~ "accurate feedback",
question == "nice" ~ "niceness",
question == "taste" ~ "ground truth",
question == "face" ~ "real expression",
question == "state" ~ "real utterance",
question == "check" ~ "check"),
question = fct_relevel(question, "ground truth", "accurate feedback", "niceness", "real expression", "real utterance"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4", "5", "6")) %>%
filter(response != "")
checks <- d %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checks, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got 75% or more check questions correct
d <- full_join(d, checks) %>%
filter(perc_correct > .50) %>%
filter
d2 <- d %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"))
d.state <- d2[d$question=="ground truth",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("State") +
ggtitle("Human") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(exp~utt)
d.infGoal <- d2[d$question=="accurate feedback",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("infGoal") +
ggtitle("Human") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(exp~utt)
d.socGoal <- d2[d$question=="niceness",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("socGoal") +
ggtitle("Human") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(exp~utt)
plot <- (d.state | M0.state | M1.state | M2.state | M3.state) /
(d.infGoal | M0.infGoal | M1.infGoal | M2.infGoal | M3.infGoal) /
(d.socGoal | M0.socGoal | M1.socGoal | M2.socGoal | M3.socGoal)
plot <- (d.state | M0.state | M1.state | M2.state) /
(d.infGoal | M0.infGoal | M1.infGoal | M2.infGoal) /
(d.socGoal | M0.socGoal | M1.socGoal | M2.socGoal)
plot
plot <- (d.state | M0.state | M1.state | M2.state) /
(d.infGoal | M0.infGoal | M1.infGoal | M2.infGoal) /
(d.socGoal | M0.socGoal | M1.socGoal | M2.socGoal)
ggsave(here("models/plots_4models_test.pdf"), width = 15, height = 9)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
library(rwebppl)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
library(patchwork)
library(ggpubr)
library(lme4)
library(brms)
rm(list = ls())
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.M0 <- webppl(
program_file = here("models/M0_No_Emo.wppl"),
data = df,
data_var = "df"
)
d.M0.l1 <- bind_rows(d.M0$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M0.state <- d.M0.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M0: No Emo") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M0.infGoal <- d.M0.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M0: No Emo") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M0.socGoal <- d.M0.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M0: No Emo") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.M1 <- webppl(
program_file = here("models/M1_Both_Com.wppl"),
data = df,
data_var = "df"
)
d.M1.l1 <- bind_rows(d.M1$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M1.state <- d.M1.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M1.infGoal <- d.M1.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M1.socGoal <- d.M1.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
d.M2 <- webppl(
program_file = here("models/M2_Speech_Com.wppl"),
data = df,
data_var = "df"
)
d.M2.l1 <- bind_rows(d.M2$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M2.state <- d.M2.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M2.infGoal <- d.M2.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M2.socGoal <- d.M2.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
rm(list = ls())
d.raw <- read.csv(here("models/201221EMO-RSA_SEMANTICS_December 22, 2020_17.46.csv"))
d <- d.raw %>%
slice(-1:-9) %>% # remove preview and pilot data
select(ResponseId, starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M"), starts_with("Check")) %>%
pivot_longer(cols = c(starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("race","gender","trial", "state")) %>%
rename(id = `ResponseId`) %>%
filter(response != "") %>%
mutate(response = case_when(response == "Yes" ~ 1,
response == "No" ~ 0))
checks <- d %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(Check2 == "L" ~ 1, TRUE ~ 0),
check_score3 = case_when(Check3 == "O" ~ 1, TRUE ~ 0),
check_score4 = case_when(Check4 == "U" ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
rm(list = ls())
d.raw <- read.csv(here("models/201221EMO-RSA_SEMANTICS_December 22, 2020_17.46.csv"))
d <- d.raw %>%
slice(-1:-9) %>% # remove preview and pilot data
select(ResponseId, starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M"), starts_with("Check")) %>%
pivot_longer(cols = c(starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("race","gender","trial", "state")) %>%
rename(id = `ResponseId`) %>%
filter(response != "") %>%
mutate(response = case_when(response == "Yes" ~ 1,
response == "No" ~ 0))
checks <- d %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(Check2 == "L" ~ 1, TRUE ~ 0),
check_score3 = case_when(Check3 == "O" ~ 1, TRUE ~ 0),
check_score4 = case_when(Check4 == "U" ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
checks <- d %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
checks <- d %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
checks
checks <- d %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got 75% or more check questions correct
d <- full_join(d, checks) %>%
filter(check_perc_correct == 1) %>%
filter
semantics <- d %>%
group_by(trial, state) %>%
multi_boot_standard(col = "response") %>%
summarize(ci_lower=round(ci_lower, 4),ci_upper=round(ci_upper, 4), mean=round(mean, 4))
pd <- position_dodge(0.2)
ggplot(semantics, aes(x = state, y = mean, group = trial, color=trial)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1,
position=pd) +
geom_line(position=pd) +
geom_point(aes(shape=trial), position=pd) +
scale_color_brewer(palette="Set2") +
theme_bw()
ggsave(here("models/semantics_figure.pdf"), width=5, height=3)
View(semantics)
library(rwebppl)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
library(patchwork)
library(ggpubr)
library(lme4)
library(brms)
rm(list = ls())
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
