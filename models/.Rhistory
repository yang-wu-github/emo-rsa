# l1: socGoal
M3.socGoal <- d.M3.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
infGoal <- d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal
infGoal
socGoal <- d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal
# l1: socGoal
M1.socGoal <- d.M1.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
socGoal <- d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal
socGoal
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.M1 <- webppl(
program_file = here("models/M1_Both_Com.wppl"),
data = df,
data_var = "df"
)
# l0
# bind_rows(d.M1$l0) %>%
#   ggplot(., aes( x= state, y = prob)) +
#   facet_grid(utterance ~ emotion) +
#   geom_col()
d.M1.l1 <- bind_rows(d.M1$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M1.state <- d.M1.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: infGoal
M1.infGoal <- d.M1.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: socGoal
M1.socGoal <- d.M1.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
d.M2 <- webppl(
program_file = here("models/M2_Speech_Com.wppl"),
data = df,
data_var = "df"
)
d.M2.l1 <- bind_rows(d.M2$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M2.state <- d.M2.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
# l1: infGoal
M2.infGoal <- d.M2.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
# l1: socGoal
M2.socGoal <- d.M2.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3.l1 <- bind_rows(d.M3$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M3.state <- d.M3.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
# l1: emoComm
M3.emoComm <- d.M3.l1 %>%
group_by(utterance, emotion, emoComm) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = emoComm, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
# l1: infGoal
M3.infGoal <- d.M3.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
# l1: socGoal
M3.socGoal <- d.M3.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(utterance~emotion)
d.raw <- read.csv(here("models/EMORSA2.csv"))
d <- d.raw %>%
slice(-1:-8) %>%
select(ResponseId, Status, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`, status = `Status`) %>%
mutate(question = case_when(question == "feed" ~ "accurate feedback",
question == "nice" ~ "niceness",
question == "taste" ~ "ground truth",
question == "face" ~ "real expression",
question == "state" ~ "real utterance",
question == "check" ~ "check"),
question = fct_relevel(question, "ground truth", "accurate feedback", "niceness", "real expression", "real utterance"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4", "5", "6")) %>%
filter(response != "")
checks <- d %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checks, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got 75% or more check questions correct
d <- full_join(d, checks) %>%
filter(perc_correct > .50) %>%
filter
d2 <- d %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"))
d.state <- d2[d$question=="ground truth",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("State") +
facet_grid(exp~utt)
d.infGoal <- d2[d$question=="accurate feedback",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("infGoal") +
facet_grid(exp~utt)
d.socGoal <- d2[d$question=="niceness",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("socGoal") +
facet_grid(exp~utt)
state <- d.state | M1.state | M2.state | M3.state
infGoal <- d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal
socGoal <- d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal
socGoal
d.M2 <- webppl(
program_file = here("models/M2_Speech_Com.wppl"),
data = df,
data_var = "df"
)
d.M2.l1 <- bind_rows(d.M2$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M2.state <- d.M2.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: infGoal
M2.infGoal <- d.M2.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: socGoal
M2.socGoal <- d.M2.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3.l1 <- bind_rows(d.M3$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M3.state <- d.M3.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: emoComm
M3.emoComm <- d.M3.l1 %>%
group_by(utterance, emotion, emoComm) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = emoComm, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: infGoal
M3.infGoal <- d.M3.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: socGoal
M3.socGoal <- d.M3.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
state <- d.state | M1.state | M2.state | M3.state
infGoal <- d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal
socGoal <- d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal
socGoal
infGoal <- d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal
infGoal
plots <- list(state, infGoal, socGoal)
pdf("plots_3models_new.pdf")
plots
dev.off()
# l1: state
M1.state <- d.M1.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
facet_grid(emotion~utterance)
M1.state
# l1: state
M1.state <- d.M1.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
M1.state
df <- expand.grid(
utterance = c("good", "bad"),
emotion = c("smile", "frown")
)
d.M1 <- webppl(
program_file = here("models/M1_Both_Com.wppl"),
data = df,
data_var = "df"
)
# l0
# bind_rows(d.M1$l0) %>%
#   ggplot(., aes( x= state, y = prob)) +
#   facet_grid(utterance ~ emotion) +
#   geom_col()
d.M1.l1 <- bind_rows(d.M1$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M1.state <- d.M1.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M1.infGoal <- d.M1.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M1.socGoal <- d.M1.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M1: EmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
d.M2 <- webppl(
program_file = here("models/M2_Speech_Com.wppl"),
data = df,
data_var = "df"
)
d.M2.l1 <- bind_rows(d.M2$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M2.state <- d.M2.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M2.infGoal <- d.M2.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: socGoal
M2.socGoal <- d.M2.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M2: EmoNotComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
d.M3 <- webppl(
program_file = here("models/M3_InferEmoCom.wppl"),
data = df,
data_var = "df"
)
d.M3.l1 <- bind_rows(d.M3$l1) %>%
mutate(utterance = fct_relevel(utterance, "good"),
emotion = fct_relevel(emotion, "smile"))
# l1: state
M3.state <- d.M3.l1 %>%
group_by(utterance, emotion, state) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = state, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M3: InferEmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: emoComm
M3.emoComm <- d.M3.l1 %>%
group_by(utterance, emotion, emoComm) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = emoComm, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M3: InferEmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
# l1: infGoal
M3.infGoal <- d.M3.l1 %>%
group_by(utterance, emotion, infGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = infGoal, y = expval))+
ggtitle("M3: InferEmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_col(position = position_dodge())+
facet_grid(emotion~utterance)
# l1: socGoal
M3.socGoal <- d.M3.l1 %>%
group_by(utterance, emotion, socGoal) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = socGoal, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M3: InferEmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
d.raw <- read.csv(here("models/EMORSA2.csv"))
d <- d.raw %>%
slice(-1:-8) %>%
select(ResponseId, Status, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`, status = `Status`) %>%
mutate(question = case_when(question == "feed" ~ "accurate feedback",
question == "nice" ~ "niceness",
question == "taste" ~ "ground truth",
question == "face" ~ "real expression",
question == "state" ~ "real utterance",
question == "check" ~ "check"),
question = fct_relevel(question, "ground truth", "accurate feedback", "niceness", "real expression", "real utterance"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4", "5", "6")) %>%
filter(response != "")
checks <- d %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checks, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got 75% or more check questions correct
d <- full_join(d, checks) %>%
filter(perc_correct > .50) %>%
filter
d2 <- d %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"))
d.state <- d2[d$question=="ground truth",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("State") +
ggtitle("Human") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(exp~utt)
d.infGoal <- d2[d$question=="accurate feedback",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("infGoal") +
ggtitle("Human") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(exp~utt)
d.socGoal <- d2[d$question=="niceness",] %>%
ggplot(., aes( x = response))+
geom_histogram(stat="count") +
xlab("socGoal") +
ggtitle("Human") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(exp~utt)
state <- d.state | M1.state | M2.state | M3.state
infGoal <- d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal
socGoal <- d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal
state
infGoal
socGoal
plot <- (d.state | M1.state | M2.state | M3.state) /
(d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal) /
(d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal)
pdf("plot_3models_new.pdf")
plot
dev.off()
plot <- (d.state | M1.state | M2.state | M3.state) /
(d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal) /
(d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal)
ggsave(here("plot_3models_new.pdf"), width = 20, height = 20)
ggsave(here(models/"plot_3models_new.pdf"), width = 20, height = 20)
ggsave(here(/models/"plot_3models_new.pdf"), width = 20, height = 20)
ggsave(here("models/plot_3models_new.pdf"), width = 20, height = 20)
ggsave(here("models/plot_3models_new.pdf"), width = 15, height = 15)
ggsave(here("models/plot_3models_new.pdf"), width = 12, height = 10)
ggsave(here("models/plot_3models_new.pdf"), width = 12, height = 9)
# l1: emoComm
M3.emoComm <- d.M3.l1 %>%
group_by(utterance, emotion, emoComm) %>%
summarize(expval = sum(prob)) %>%
ggplot(., aes( x = emoComm, y = expval))+
geom_col(position = position_dodge())+
ggtitle("M3: InferEmoComm") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(emotion~utterance)
M3.emoComm
ggsave(here("models/M3_emoComm.pdf"), width = 3, height = 3)
plot <- (d.state | M1.state | M2.state | M3.state) /
(d.infGoal | M1.infGoal | M2.infGoal | M3.infGoal) /
(d.socGoal | M1.socGoal | M2.socGoal | M3.socGoal)
ggsave(here("models/plots_3models_new.pdf"), width = 12, height = 9)
M3.emoComm
ggsave(here("models/plots_M3_emoComm.pdf"), width = 3, height = 3)
