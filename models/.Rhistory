geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
# Together PUNE
NUPE <- (human.NUPE.state | M1.NUPE.state | M2.NUPE.state | M3.NUPE.state) /
(human.NUPE.inf | M1.NUPE.inf | M2.NUPE.inf | M3.NUPE.inf) /
(human.NUPE.soc | M1.NUPE.soc | M2.NUPE.soc | M3.NUPE.soc) +
plot_annotation(
title = "Negative Utterance, Positive Expression",
subtitle = "                     Human                    M1: Both Communicative         M2: Speech Communicative Only         M3: Infer Emo Com",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
NUPE
plots <- list(PUPE, NUNE, PUNE, NUPE)
pdf("plots.pdf")
plots
dev.off()
plots_3Models
plots <- list(PUPE, NUNE, PUNE, NUPE)
pdf("plots.pdf")
plots_3Models
plots <- list(PUPE, NUNE, PUNE, NUPE)
pdf("plots_3models.pdf")
plots
dev.off()
#---human
human.PUPE.state <- ggplot(data=d[which(d$condition=="PU_PE" & d$question=="ground truth"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("State") +
theme(axis.title.y=element_blank())
human.PUPE.inf <- ggplot(data=d[which(d$condition=="PU_PE" & d$question=="accurate feedback"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
human.PUPE.soc <- ggplot(data=d[which(d$condition=="PU_PE" & d$question=="niceness"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M1
M1.PUPE.state <- ggplot(data=d.M1, aes(x=good_smile.support.state, y=good_smile.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M1.PUPE.inf <- ggplot(data=d.M1, aes(x=good_smile.support.infGoal, weight=good_smile.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M1.PUPE.soc <- ggplot(data=d.M1, aes(x=good_smile.support.socGoal, weight=good_smile.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M2
M2.PUPE.state <- ggplot(data=d.M2, aes(x=good_smile.support.state, y=good_smile.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M2.PUPE.inf <- ggplot(data=d.M2, aes(x=good_smile.support.infGoal, weight=good_smile.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M2.PUPE.soc <- ggplot(data=d.M2, aes(x=good_smile.support.socGoal, weight=good_smile.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M3
M3.PUPE.state <- ggplot(data=d.M3, aes(x=good_smile.support.state, y=good_smile.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M3.PUPE.inf <- ggplot(data=d.M3, aes(x=good_smile.support.infGoal, weight=good_smile.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M3.PUPE.soc <- ggplot(data=d.M3, aes(x=good_smile.support.socGoal, weight=good_smile.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
# Together PUNE
PUPE <- (human.PUPE.state | M1.PUPE.state | M2.PUPE.state | M3.PUPE.state) /
(human.PUPE.inf | M1.PUPE.inf | M2.PUPE.inf | M3.PUPE.inf) /
(human.PUPE.soc | M1.PUPE.soc | M2.PUPE.soc | M3.PUPE.soc) +
plot_annotation(
title = "Positive Utterance, Positive Expression",
subtitle = "                     Human                    M1: Both Communicative         M2: Speech Communicative Only          M3: Infer Emo Com",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
#---human
human.NUNE.state <- ggplot(data=d[which(d$condition=="NU_NE" & d$question=="ground truth"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("State") +
theme(axis.title.y=element_blank())
human.NUNE.inf <- ggplot(data=d[which(d$condition=="NU_NE" & d$question=="accurate feedback"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
human.NUNE.soc <- ggplot(data=d[which(d$condition=="NU_NE" & d$question=="niceness"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M1
M1.NUNE.state <- ggplot(data=d.M1, aes(x=bad_frown.support.state, y=bad_frown.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M1.NUNE.inf <- ggplot(data=d.M1, aes(x=bad_frown.support.infGoal, weight=bad_frown.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M1.NUNE.soc <- ggplot(data=d.M1, aes(x=bad_frown.support.socGoal, weight=bad_frown.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M2
M2.NUNE.state <- ggplot(data=d.M2, aes(x=bad_frown.support.state, y=bad_frown.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M2.NUNE.inf <- ggplot(data=d.M2, aes(x=bad_frown.support.infGoal, weight=bad_frown.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M2.NUNE.soc <- ggplot(data=d.M2, aes(x=bad_frown.support.socGoal, weight=bad_frown.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M3
M3.NUNE.state <- ggplot(data=d.M3, aes(x=bad_frown.support.state, y=bad_frown.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M3.NUNE.inf <- ggplot(data=d.M3, aes(x=bad_frown.support.infGoal, weight=bad_frown.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M3.NUNE.soc <- ggplot(data=d.M3, aes(x=bad_frown.support.socGoal, weight=bad_frown.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
# Together PUNE
NUNE <- (human.NUNE.state | M1.NUNE.state | M2.NUNE.state | M3.NUNE.state) /
(human.NUNE.inf | M1.NUNE.inf | M2.NUNE.inf | M3.NUNE.inf) /
(human.NUNE.soc | M1.NUNE.soc | M2.NUNE.soc | M3.NUNE.soc) +
plot_annotation(
title = "Negative Utterance, Negative Expression",
subtitle = "                     Human                    M1: Both Communicative         M2: Speech Communicative Only         M3: Infer Emo Com",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
NUNE
#---human
human.PUNE.state <- ggplot(data=d[which(d$condition=="PU_NE" & d$question=="ground truth"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("State") +
theme(axis.title.y=element_blank())
human.PUNE.inf <- ggplot(data=d[which(d$condition=="PU_NE" & d$question=="accurate feedback"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
human.PUNE.soc <- ggplot(data=d[which(d$condition=="PU_NE" & d$question=="niceness"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M1
M1.PUNE.state <- ggplot(data=d.M1, aes(x=good_frown.support.state, y=good_frown.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M1.PUNE.inf <- ggplot(data=d.M1, aes(x=good_frown.support.infGoal, weight=good_frown.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M1.PUNE.soc <- ggplot(data=d.M1, aes(x=good_frown.support.socGoal, weight=good_frown.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M2
M2.PUNE.state <- ggplot(data=d.M2, aes(x=good_frown.support.state, y=good_frown.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M2.PUNE.inf <- ggplot(data=d.M2, aes(x=good_frown.support.infGoal, weight=good_frown.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M2.PUNE.soc <- ggplot(data=d.M2, aes(x=good_frown.support.socGoal, weight=good_frown.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M3
M3.PUNE.state <- ggplot(data=d.M3, aes(x=good_frown.support.state, y=good_frown.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M3.PUNE.inf <- ggplot(data=d.M3, aes(x=good_frown.support.infGoal, weight=good_frown.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M3.PUNE.soc <- ggplot(data=d.M3, aes(x=good_frown.support.socGoal, weight=good_frown.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
# Together PUNE
PUNE <- (human.PUNE.state | M1.PUNE.state | M2.PUNE.state | M3.PUNE.state) /
(human.PUNE.inf | M1.PUNE.inf | M2.PUNE.inf | M3.PUNE.inf) /
(human.PUNE.soc | M1.PUNE.soc | M2.PUNE.soc | M3.PUNE.soc) +
plot_annotation(
title = "Positive Utterance, Negative Expression",
subtitle = "                     Human                    M1: Both Communicative         M2: Speech Communicative Only         M3: Infer Emo Com",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
human.NUPE.state <- ggplot(data=d[which(d$condition=="NU_PE" & d$question=="ground truth"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("State") +
theme(axis.title.y=element_blank())
human.NUPE.inf <- ggplot(data=d[which(d$condition=="NU_PE" & d$question=="accurate feedback"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
human.NUPE.soc <- ggplot(data=d[which(d$condition=="NU_PE" & d$question=="niceness"),],
aes(x=response))+
geom_histogram(stat="count") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M1
M1.NUPE.state <- ggplot(data=d.M1, aes(x=bad_smile.support.state, y=bad_smile.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M1.NUPE.inf <- ggplot(data=d.M1, aes(x=bad_smile.support.infGoal, weight=bad_smile.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M1.NUPE.soc <- ggplot(data=d.M1, aes(x=bad_smile.support.socGoal, weight=bad_smile.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M2
M2.NUPE.state <- ggplot(data=d.M2, aes(x=bad_smile.support.state, y=bad_smile.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M2.NUPE.inf <- ggplot(data=d.M2, aes(x=bad_smile.support.infGoal, weight=bad_smile.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M2.NUPE.soc <- ggplot(data=d.M2, aes(x=bad_smile.support.socGoal, weight=bad_smile.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
#---M3
M3.NUPE.state <- ggplot(data=d.M3, aes(x=bad_smile.support.state, y=bad_smile.probs))+
geom_bar(stat="identity") +
xlab("State") +
theme(axis.title.y=element_blank())
M3.NUPE.inf <- ggplot(data=d.M3, aes(x=bad_smile.support.infGoal, weight=bad_smile.probs))+
geom_density(fill = "gray") +
xlab("Info Goal") +
theme(axis.title.y=element_blank())
M3.NUPE.soc <- ggplot(data=d.M3, aes(x=bad_smile.support.socGoal, weight=bad_smile.probs))+
geom_density(fill = "gray") +
xlab("Soc Goal") +
theme(axis.title.y=element_blank())
# Together PUNE
NUPE <- (human.NUPE.state | M1.NUPE.state | M2.NUPE.state | M3.NUPE.state) /
(human.NUPE.inf | M1.NUPE.inf | M2.NUPE.inf | M3.NUPE.inf) /
(human.NUPE.soc | M1.NUPE.soc | M2.NUPE.soc | M3.NUPE.soc) +
plot_annotation(
title = "Negative Utterance, Positive Expression",
subtitle = "                     Human                    M1: Both Communicative         M2: Speech Communicative Only         M3: Infer Emo Com",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
plots <- list(PUPE, NUNE, PUNE, NUPE)
pdf("plots_3models.pdf")
plots
dev.off()
# Together PUNE
PUPE <- (human.PUPE.state | M1.PUPE.state | M2.PUPE.state | M3.PUPE.state) /
(human.PUPE.inf | M1.PUPE.inf | M2.PUPE.inf | M3.PUPE.inf) /
(human.PUPE.soc | M1.PUPE.soc | M2.PUPE.soc | M3.PUPE.soc) +
plot_annotation(
title = "Positive Utterance, Positive Expression",
subtitle = "                     Human                    M1: EmoCom         M2: EmoNotCom          M3: InferEmoCom",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
plots <- list(PUPE, NUNE, PUNE, NUPE)
pdf("plots_3models.pdf")
plots
dev.off()
# Together PUNE
PUPE <- (human.PUPE.state | M1.PUPE.state | M2.PUPE.state | M3.PUPE.state) /
(human.PUPE.inf | M1.PUPE.inf | M2.PUPE.inf | M3.PUPE.inf) /
(human.PUPE.soc | M1.PUPE.soc | M2.PUPE.soc | M3.PUPE.soc) +
plot_annotation(
title = "Positive Utterance, Positive Expression",
subtitle = "                     Human                    M1: EmoCom             M2: EmoNotCom                  M3: InferEmoCom",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
plots <- list(PUPE, NUNE, PUNE, NUPE)
pdf("plots_3models.pdf")
plots
dev.off()
# Together PUNE
NUNE <- (human.NUNE.state | M1.NUNE.state | M2.NUNE.state | M3.NUNE.state) /
(human.NUNE.inf | M1.NUNE.inf | M2.NUNE.inf | M3.NUNE.inf) /
(human.NUNE.soc | M1.NUNE.soc | M2.NUNE.soc | M3.NUNE.soc) +
plot_annotation(
title = "Negative Utterance, Negative Expression",
subtitle = "                     Human                    M1: EmoCom             M2: EmoNotCom                  M3: InferEmoCom",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
# Together PUNE
PUNE <- (human.PUNE.state | M1.PUNE.state | M2.PUNE.state | M3.PUNE.state) /
(human.PUNE.inf | M1.PUNE.inf | M2.PUNE.inf | M3.PUNE.inf) /
(human.PUNE.soc | M1.PUNE.soc | M2.PUNE.soc | M3.PUNE.soc) +
plot_annotation(
title = "Positive Utterance, Negative Expression",
subtitle = "                     Human                    M1: EmoCom             M2: EmoNotCom                  M3: InferEmoCom",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
# Together PUNE
NUPE <- (human.NUPE.state | M1.NUPE.state | M2.NUPE.state | M3.NUPE.state) /
(human.NUPE.inf | M1.NUPE.inf | M2.NUPE.inf | M3.NUPE.inf) /
(human.NUPE.soc | M1.NUPE.soc | M2.NUPE.soc | M3.NUPE.soc) +
plot_annotation(
title = "Negative Utterance, Positive Expression",
subtitle = "                     Human                    M1: EmoCom             M2: EmoNotCom                  M3: InferEmoCom",
theme = theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5))
)
plots <- list(PUPE, NUNE, PUNE, NUPE)
pdf("plots_3models.pdf")
plots
dev.off()
View(d.M3)
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(x=good_smile.support.emoComm))+
geom_bar(stat="identity") +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
M3.PUPE.emoCom
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(x=good_smile.support.emoComm))+
geom_density(fill = "gray") +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
M3.PUPE.emoCom
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(x=good_smile.support.emoComm))+
geom_histogram() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
M3.PUPE.emoCom
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(good_smile.support.emoComm))+
geom_histogram() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
M3.PUPE.emoCom
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(good_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
M3.PUPE.emoCom
M3.NUNE.emoCom <- ggplot(data=d.M3, aes(bad_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
M3.NUNE.emoCom
summary(M3.PUPE.emoCom$good_smile.support.emoComm)
M3.PUPE.emoCom$good_smile.support.emoComm
summary(d.M3$good_smile.support.emoComm)
summary(d.M3$bad_frown.support.emoComm)
M3.NUPE.emoCom <- ggplot(data=d.M3, aes(bad_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
M3.NUPE.emoCom
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(good_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE")
M3.PUPE.emoCom
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(good_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.PUPE.emoCom
emoCom <- M3.PUPE.emoCom | M3.NUNE.emoCom | M3.PUNE.emoCom | M3.NUPE.emoCom
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(good_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.PUPE.emoCom
M3.NUNE.emoCom <- ggplot(data=d.M3, aes(bad_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank())
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.NUNE.emoCom
M3.NUNE.emoCom <- ggplot(data=d.M3, aes(bad_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.NUNE.emoCom
M3.PUNE.emoCom <- ggplot(data=d.M3, aes(good_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.PUNE.emoCom
M3.NUPE.emoCom <- ggplot(data=d.M3, aes(bad_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.NUPE.emoCom
emoCom <- M3.PUPE.emoCom | M3.NUNE.emoCom | M3.PUNE.emoCom | M3.NUPE.emoCom
emoCom
pdf("M3_emoCom.pdf")
plots
dev.off()
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(good_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.PUPE.emoCom
M3.NUNE.emoCom <- ggplot(data=d.M3, aes(bad_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("NU_NE") +
theme(plot.title = element_text(hjust = 0.5))
M3.NUNE.emoCom
M3.PUNE.emoCom <- ggplot(data=d.M3, aes(good_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_NE") +
theme(plot.title = element_text(hjust = 0.5))
M3.PUNE.emoCom
M3.NUPE.emoCom <- ggplot(data=d.M3, aes(bad_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("NU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.NUPE.emoCom
emoCom <- M3.PUPE.emoCom | M3.NUNE.emoCom | M3.PUNE.emoCom | M3.NUPE.emoCom
emoCom
pdf("M3_emoCom.pdf")
emoCom
dev.off()
M3.PUPE.emoCom <- ggplot(data=d.M3, aes(good_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.PUPE.emoCom
M3.NUNE.emoCom <- ggplot(data=d.M3, aes(bad_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("NU_NE") +
theme(plot.title = element_text(hjust = 0.5))
M3.NUNE.emoCom
M3.PUNE.emoCom <- ggplot(data=d.M3, aes(good_frown.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("PU_NE") +
theme(plot.title = element_text(hjust = 0.5))
M3.PUNE.emoCom
M3.NUPE.emoCom <- ggplot(data=d.M3, aes(bad_smile.support.emoComm))+
geom_bar() +
xlab("EmoCom?") +
theme(axis.title.y=element_blank()) +
ggtitle("NU_PE") +
theme(plot.title = element_text(hjust = 0.5))
M3.NUPE.emoCom
emoCom <- M3.PUPE.emoCom | M3.NUNE.emoCom | M3.PUNE.emoCom | M3.NUPE.emoCom
emoCom
ggsave(here("M3_emoCom.pdf"))
ggsave(here("models/M3_emoCom.pdf"))
ggsave(here("models/plots_M3_emoCom.pdf"))
