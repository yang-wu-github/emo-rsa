condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct) %>%
#write.csv(d2, here("models/clean_data_true_state.csv"), row.names = FALSE)
condition <- c('good smile', 'bad frown', 'good frown','good frown')
library(rwebppl)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
library(patchwork)
library(ggpubr)
library(lme4)
library(brms)
rm(list = ls())
d.raw <- read.csv(here("models/201221EMO-RSA_MAIN_STATE_January 13, 2021_15.51.csv"))
d <- d.raw %>%
slice(-1:-2) %>%
filter(Consent != "") %>%
select(ResponseId, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`) %>%
mutate(question = case_when(question == "GT" ~ "true state",
question == "check" ~ "check"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4", "5", "6")) %>%
select(-random) %>%
filter(response != "")
checks <- d %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checks, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d <- full_join(d, checks) %>%
filter(perc_correct == 1) %>%
filter
d.state <- d %>%
filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct) %>%
#write.csv(d2, here("models/clean_data_true_state.csv"), row.names = FALSE)
condition <- c('good smile', 'bad frown', 'good frown','good frown')
head(d)
d.state <- d %>%
filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile"))) %>%
select(-perc_correct) %>%
#write.csv(d2, here("models/clean_data_true_state.csv"), row.names = FALSE)
condition <- c('good smile', 'bad frown', 'good frown','good frown')
d.state <- d %>%
#filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct) %>%
#write.csv(d2, here("models/clean_data_true_state.csv"), row.names = FALSE)
condition <- c('good smile', 'bad frown', 'good frown','good frown')
d.state <- d %>%
#filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
#utt = fct_relevel(utt, "good"),
#exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct) %>%
#write.csv(d2, here("models/clean_data_true_state.csv"), row.names = FALSE)
condition <- c('good smile', 'bad frown', 'good frown','good frown')
library(rwebppl)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
library(patchwork)
library(ggpubr)
library(lme4)
library(brms)
d.state <- d %>%
#filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
#utt = fct_relevel(utt, "good"),
#exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct) %>%
#write.csv(d2, here("models/clean_data_true_state.csv"), row.names = FALSE)
condition <- c('good smile', 'bad frown', 'good frown','good frown')
d.state <- d %>%
#filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
#utt = fct_relevel(utt, "good"),
#exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct)
d.state <- d %>%
filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
#utt = fct_relevel(utt, "good"),
#exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct)
d.state <- d %>%
filter(question=="true state") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct)
dGoal.raw <- read.csv(here("models/201221EMO-RSA_MAIN_COMMGOALS_PREREGISTERED_DONOTCHANGE_January 13, 2021_20.41.csv"))
dGoal <- dGoal.raw %>%
slice(-1:-2) %>%
filter(Q358 != "", Q129 != "test") %>%
select(ResponseId, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`) %>%
mutate(question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal",
question == "check" ~ "check"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4")) %>%
select(-random) %>%
filter(response != "")
checksGoal <- dGoal %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checksGoal, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
dGoal <- full_join(dGoal, checksGoal) %>%
filter(perc_correct == 1) %>%
filter
dGoal2 <- dGoal %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile"))) %>%
filter(question!="check") %>%
select(-perc_correct)
dGoal2 <- dGoal %>%
filter(question!="check") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct)
head(dGoal2)
d.infGoal <- dGoal2[dGoal2$question == "informational goal"]
d.socGoal <- dGoal2[dGoal2$question == "social goal"]
dGoal2 <- dGoal %>%
filter(question!="check") %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile")),
response = as.numeric(response)) %>%
select(-perc_correct)
d.infGoal <- dGoal2[dGoal2$question == "informational goal",]
d.socGoal <- dGoal2[dGoal2$question == "social goal",]
summary(state)
# Bayesian mixed-effects model
state <- brm(response ~ utt * exp + (1 + utt*exp|id) + (1 + utt*exp|race),
data = d.state,
family = cumulative(link = "logit", threshold = "flexible"))
summary(state)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
rm(list = ls())
d.raw <- read.csv(here("models/201221EMO-RSA_SEMANTICS_December 22, 2020_17.46.csv"))
d <- d.raw %>%
slice(-1:-9) %>% # remove preview and pilot data
select(ResponseId, starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M"), starts_with("Check")) %>%
pivot_longer(cols = c(starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("race","gender","trial", "state")) %>%
rename(id = `ResponseId`) %>%
filter(response != "") %>%
mutate(response = case_when(response == "Yes" ~ 1,
response == "No" ~ 0))
checks <- d %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got 75% or more check questions correct
d2 <- full_join(d, checks) %>%
filter(check_perc_correct == 1) %>%
filter %>%
select(-Check1, -Check2, -Check3, -Check4, -check_perc_correct)
semantics <- d2 %>%
group_by(trial, state) %>%
multi_boot_standard(col = "response") %>%
summarize(ci_lower=round(ci_lower, 4),ci_upper=round(ci_upper, 4), mean=round(mean, 4))
pd <- position_dodge(0.2)
ggplot(semantics, aes(x = state, y = mean, group = trial, color=trial)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1,
position=pd) +
geom_line(position=pd) +
geom_point(aes(shape=trial), position=pd) +
scale_color_brewer(palette="Set2") +
theme_bw()
head(d)
d <- d.raw %>%
slice(-1:-9) %>% # remove preview and pilot data
select(ResponseId, starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M"), starts_with("Check")) %>%
pivot_longer(cols = c(starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("race","gender","trial", "state")) %>%
mutate(trial = casewhen(trial == "Good" ~ "good",
trial == "Bad" ~ "bad",
trial == "Pos" ~ "smile",
trial == "Neg" ~ "frown")) %>%
rename(id = `ResponseId`) %>%
filter(response != "") %>%
mutate(response = case_when(response == "Yes" ~ 1,
response == "No" ~ 0))
d <- d.raw %>%
slice(-1:-9) %>% # remove preview and pilot data
select(ResponseId, starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M"), starts_with("Check")) %>%
pivot_longer(cols = c(starts_with("A_F"), starts_with("W_M"),
starts_with("B_F"), starts_with("L_M")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("race","gender","trial", "state")) %>%
rename(id = `ResponseId`) %>%
filter(response != "") %>%
mutate(response = case_when(response == "Yes" ~ 1,
response == "No" ~ 0),
trial = case_when(trial == "Good" ~ "good",
trial == "Bad" ~ "bad",
trial == "Pos" ~ "smile",
trial == "Neg" ~ "frown"),
trial = factor(trial, levels = c("good", "bad", "smile", "frown")))
checks <- d %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got 75% or more check questions correct
d2 <- full_join(d, checks) %>%
filter(check_perc_correct == 1) %>%
filter %>%
select(-Check1, -Check2, -Check3, -Check4, -check_perc_correct)
semantics <- d2 %>%
group_by(trial, state) %>%
multi_boot_standard(col = "response") %>%
summarize(ci_lower=round(ci_lower, 4),ci_upper=round(ci_upper, 4), mean=round(mean, 4))
pd <- position_dodge(0.2)
ggplot(semantics, aes(x = state, y = mean, group = trial, color=trial)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1,
position=pd) +
geom_line(position=pd) +
geom_point(aes(shape=trial), position=pd) +
scale_color_brewer(palette="Set2") +
theme_bw()
ggsave(here("models/plot_semantics.pdf"), width=5, height=3)
library(rwebppl)
library(here)
library(ggplot2)
library(tidyverse)
library(langcog)
library(patchwork)
library(ggpubr)
library(lme4)
library(brms)
rm(list = ls())
d.raw <- read.csv(here("models/201221EMO-RSA_MAIN_STATE_January 13, 2021_15.51.csv"))
d <- d.raw %>%
slice(-1:-2) %>%
filter(Consent != "") %>%
select(ResponseId, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`) %>%
mutate(question = case_when(question == "GT" ~ "true state",
question == "check" ~ "check"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4", "5", "6")) %>%
select(-random) %>%
filter(response != "")
checks <- d %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checks, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d <- full_join(d, checks) %>%
filter(perc_correct == 1) %>%
filter
d2 <- d %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile"))) %>%
filter(question=="true state") %>%
select(-perc_correct)
write.csv(d2, here("models/clean_data_true_state.csv"), row.names = FALSE)
dGoal.raw <- read.csv(here("models/201221EMO-RSA_MAIN_COMMGOALS_PREREGISTERED_DONOTCHANGE_January 13, 2021_20.41.csv"))
dGoal <- dGoal.raw %>%
slice(-1:-2) %>%
filter(Q358 != "", Q129 != "test") %>%
select(ResponseId, starts_with("PUtt_"), starts_with("NUtt_")) %>%
pivot_longer(cols = c(starts_with("PUtt_"), starts_with("NUtt_")),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("utt","exp","race", "gender","question", "random")) %>%
rename(id = `ResponseId`) %>%
mutate(question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal",
question == "check" ~ "check"),
condition = case_when(utt == "PUtt" & exp == "PExp" ~ "PU_PE",
utt == "PUtt" & exp == "NExp" ~ "PU_NE",
utt == "NUtt" & exp == "PExp" ~ "NU_PE",
utt == "NUtt" & exp == "NExp" ~ "NU_NE"),
condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
response = fct_relevel(response, "1", "2", "3", "4")) %>%
select(-random) %>%
filter(response != "")
checksGoal <- dGoal %>%
filter(question == "check") %>%
mutate(check_score = case_when(race == "A" & grepl("H", response, ignore.case = TRUE) ~ 1,
race == "B" & grepl("O", response, ignore.case = TRUE) ~ 1,
race == "L" & grepl("U", response, ignore.case = TRUE) ~ 1,
race == "W" & grepl("L", response, ignore.case = TRUE) ~ 1,
TRUE ~ 0)) %>%
group_by(id) %>%
summarize(perc_correct = mean(check_score))
ggplot(checksGoal, aes(perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
dGoal <- full_join(dGoal, checksGoal) %>%
filter(perc_correct == 1) %>%
filter
dGoal2 <- dGoal %>%
mutate(utt = case_when(utt == "PUtt" ~ "good",
utt == "NUtt" ~ "bad"),
exp = case_when(exp == "PExp" ~ "smile",
exp == "NExp" ~ "frown"),
utt = fct_relevel(utt, "good"),
exp = fct_relevel(exp, "smile"),
condition = case_when(condition=="PU_PE" ~ "good smile",
condition=="NU_NE" ~ "bad frown",
condition=="PU_NE" ~ "good frown",
condition=="NU_PE" ~ "bad smile"),
condition = factor(condition, levels=c("good smile", "bad frown", "good frown", "bad smile"))) %>%
filter(question!="check") %>%
select(-perc_correct)
write.csv(d2, here("models/clean_data_goals.csv"), row.names = FALSE)
write.csv(dGoal2, here("models/clean_data_goals.csv"), row.names = FALSE)
